plugins {
    id "net.ltgt.apt-eclipse" version "0.21"
    id "com.github.johnrengelman.shadow" version "5.2.0"
    id "application"
    id "groovy"
}

version "0.1"
group "example"

repositories {
    jcenter()
    maven { url "https://oss.jfrog.org/oss-snapshot-local" }
}

configurations {
    // for dependencies that are needed for development only
    developmentOnly
}

configurations.all {
    resolutionStrategy {
        force 'io.micronaut:micronaut-security-annotations:2.0.0.BUILD-SNAPSHOT'
        force 'io.micronaut:micronaut-security:2.0.0.BUILD-SNAPSHOT'
        force 'io.micronaut:micronaut-security-jwt:2.0.0.BUILD-SNAPSHOT'
    }
}

dependencies {
    annotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
    annotationProcessor "io.micronaut:micronaut-inject-java"
    annotationProcessor "io.micronaut:micronaut-validation"
    //tag::micronaut-graal[]
    annotationProcessor "io.micronaut:micronaut-graal"
    //end::micronaut-graal[]
    //tag::svm[]
    compileOnly "org.graalvm.nativeimage:svm:19.3.0"
    //end::svm[]
    implementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    implementation "io.micronaut:micronaut-inject"
    implementation "io.micronaut:micronaut-validation"
    implementation "io.micronaut:micronaut-runtime"
    implementation "io.micronaut:micronaut-http-server-netty"
    implementation "io.micronaut:micronaut-http-client"

    //tag::securitydependency[]
    annotationProcessor "io.micronaut:micronaut-security-annotations:2.0.0.BUILD-SNAPSHOT"
    implementation "io.micronaut:micronaut-security-jwt:2.0.0.BUILD-SNAPSHOT"
    implementation "io.micronaut:micronaut-security:2.0.0.BUILD-SNAPSHOT"
    //end::securitydependency[]

    //tag::micronautdata[]
    annotationProcessor("io.micronaut.data:micronaut-data-processor") // <1>
    implementation("io.micronaut.data:micronaut-data-jdbc") // <2>
    runtime("com.h2database:h2") // <3>
    runtime("io.micronaut.configuration:micronaut-jdbc-hikari") // <4>
    //end::micronautdata[]

    //tag::spock[]
    testImplementation("org.spockframework:spock-core") {
        exclude group: "org.codehaus.groovy", module: "groovy-all"
    }
    testImplementation "io.micronaut:micronaut-inject-groovy"
    testImplementation "io.micronaut.test:micronaut-test-spock"
    //end::spock[]

    runtimeOnly "ch.qos.logback:logback-classic:1.2.3"

    testAnnotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
    testAnnotationProcessor "io.micronaut:micronaut-inject-java"
    testImplementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    testImplementation "org.junit.jupiter:junit-jupiter-api"
    testImplementation "io.micronaut.test:micronaut-test-junit5"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"
    testRuntimeOnly "org.junit.vintage:junit-vintage-engine:5.5.0"
}

test.classpath += configurations.developmentOnly

mainClassName = "example.micronaut.Application"
// use JUnit 5 platform
test {
    useJUnitPlatform()
}
tasks.withType(JavaCompile){
    options.encoding = "UTF-8"
    options.compilerArgs.add('-parameters')
}

shadowJar {
    mergeServiceFiles()
}

run.classpath += configurations.developmentOnly
run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')
